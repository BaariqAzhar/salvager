{"ast":null,"code":"import _defineProperty from\"E:\\\\Work\\\\react\\\\salvager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\Work\\\\react\\\\salvager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:\\\\Work\\\\react\\\\salvager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ReactDOM from'react-dom';// import logo from './logo.svg';\n// import './App.css';\nimport{makeStyles}from'@material-ui/core/styles';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Typography from'@material-ui/core/Typography';import Button from'@material-ui/core/Button';import IconButton from'@material-ui/core/IconButton';// import MenuIcon from '@material-ui/icons/Menu';\nimport BlackLogo from'../assets/img/black-logo.png';import WhiteLogo from'../assets/img/white-logo.png';import{Grid,Container}from'@material-ui/core';import{Router,Route,Switch,Link}from'react-router-dom';import clsx from'clsx';import Drawer from'@material-ui/core/Drawer';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import IconBurgerButton from'../assets/img/burgerBtn.png';import IconBlackBurgerButton from'../assets/img/burgerBtnBlack.png';// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from'@material-ui/core/CssBaseline';import useScrollTrigger from'@material-ui/core/useScrollTrigger';import Slide from'@material-ui/core/Slide';var Color;{/* <NavbarSection theme='light' /> */}export default function NavbarSection(props){var _useState=useState('transparent'),_useState2=_slicedToArray(_useState,2),navColor=_useState2[0],setNavColor=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),scroll=_useState4[0],setScroll=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),logoSize=_useState6[0],setLogoSize=_useState6[1];var classes=useStyles({navColor:navColor,logoSize:logoSize});useEffect(function(){var onScroll=function onScroll(e){setScroll(e.target.documentElement.scrollTop);if(scroll>=300){if(navColor!==\"white\"){setNavColor(\"#DCE2E2\");}}else{if(navColor!==\"transparent\"){setNavColor(\"transparent\");}}};window.addEventListener(\"scroll\",onScroll);console.log(\"Scroll top \"+scroll);},[scroll]);var isMobile=false;if(window.innerWidth>=425){isMobile=false;console.log('ini desktop');}else{isMobile=true;console.log('ini mobile');}console.log(window.innerWidth);var Logo;var LogoMobile;var IconBurger;var theme=props.theme;theme='dark';switch(theme){case'dark':Logo=BlackLogo;IconBurger=IconBlackBurgerButton;Color='black';break;case'light':Logo=WhiteLogo;IconBurger=IconBurgerButton;Color='white';break;}if(props.logo==='off'){Logo='';}var _React$useState=React.useState({top:false,left:false,bottom:false,right:false}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var toggleDrawer=function toggleDrawer(anchor,open){return function(event){if(event.type==='keydown'&&(event.key==='Tab'||event.key==='Shift')){return;}setState(_objectSpread({},state,_defineProperty({},anchor,open)));};};var list=function list(anchor){return React.createElement(\"div\",{className:clsx(classes.list,_defineProperty({},classes.fullList,anchor==='top'||anchor==='bottom')),role:\"presentation\",onClick:toggleDrawer(anchor,false),onKeyDown:toggleDrawer(anchor,false)},React.createElement(List,null,React.createElement(ListItem,null,React.createElement(Button,null,React.createElement(Link,{to:\"/\",className:classes.linkMobile,color:\"inherit\"},\"HOME\"))),React.createElement(Divider,null),React.createElement(ListItem,null,React.createElement(Button,null,React.createElement(Link,{to:\"/story\",className:classes.linkMobile,color:\"inherit\"},\"STORY\"))),React.createElement(Divider,null),React.createElement(ListItem,null,React.createElement(Button,null,React.createElement(Link,{to:\"/products\",className:classes.linkMobile,color:\"inherit\"},\"PRODUCTS\"))),React.createElement(Divider,null),React.createElement(ListItem,null,React.createElement(Button,null,React.createElement(Link,{to:\"/diary\",className:classes.linkMobile,color:\"inherit\"},\"DIARY\"))),React.createElement(Divider,null),React.createElement(ListItem,null,React.createElement(Button,null,React.createElement(Link,{to:\"/contact\",className:classes.linkMobile,color:\"inherit\"},\"CONTACT\")))));};if(isMobile){return React.createElement(\"div\",null,React.createElement(AppBar,{elevation:0,className:classes.bgTransparent},React.createElement(\"div\",{position:\"static\",className:classes.navbar},['left'].map(function(anchor){return React.createElement(React.Fragment,{key:anchor},React.createElement(Button,{className:classes.mobileBurgerButton,onClick:toggleDrawer(anchor,true)},React.createElement(\"img\",{src:IconBurger})),React.createElement(Drawer,{anchor:anchor,open:state[anchor],onClose:toggleDrawer(anchor,false)},list(anchor)));}),React.createElement(\"img\",{className:classes.mobileLogo,src:Logo,disply:\"inline\"}))));}else{return React.createElement(\"div\",null,React.createElement(AppBar,{elevation:0,className:classes.bgTransparent},React.createElement(\"div\",{position:\"static\",className:classes.navbar},React.createElement(Container,null,React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12,sm:6},React.createElement(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\"},React.createElement(\"img\",{className:classes.logo,src:Logo}))),React.createElement(Grid,{item:true,xs:12,sm:6},React.createElement(Toolbar,null,React.createElement(Button,null,React.createElement(Link,{style:{color:Color},className:classes.link,to:\"/\",color:\"inherit\"},\"HOME\")),React.createElement(Button,null,React.createElement(Link,{style:{color:Color},className:classes.link,to:\"/story\",color:\"inherit\"},\"STORY\")),React.createElement(Button,null,React.createElement(Link,{style:{color:Color},className:classes.link,to:\"/products\",color:\"inherit\"},\"PRODUCTS\")),React.createElement(Button,null,React.createElement(Link,{style:{color:Color},className:classes.link,to:\"/diary\",color:\"inherit\"},\"DIARY\")),React.createElement(Button,null,React.createElement(Link,{style:{color:Color},className:classes.link,to:\"/contact\",color:\"inherit\"},\"CONTACT\")))))))));}}var useStyles=makeStyles(function(theme){return{bgTransparent:{backgroundColor:'transparent'},list:{width:250},fullList:{width:'auto'},mobileLogo:{height:'3em',// width: '50%',\nmarginLeft:'1em',marginTop:'1em'},mobileBurgerButton:{// marginLeft: '1em',\nmarginTop:'1em'},navbar:function navbar(props){return{color:'black',// height: 48,\n// padding: '0 30px',\nboxShadow:'0 3px 5px 2px edeeec',// boxShadow: 'none'\nbackgroundColor:props.navColor,paddingBottom:'1em'};},menuButton:{marginRight:theme.spacing(2),width:'70%'},title:{flexGrow:1},background:{backgroundColor:'transparent'},logo:{paddingTop:'0.01rem',width:'60%'},link:{// color: Color,\nfontWeight:'bold',margin:'1rem'},linkMobile:{color:'black'}};});// function HideOnScroll(props) {\n//     const { children, window } = props;\n//     const trigger = useScrollTrigger({ target: window ? window() : undefined });\n//     return (\n//         <Slide appear={false} direction=\"down\" in={!trigger}>\n//             {children}\n//         </Slide>\n//     );\n// }\n// HideOnScroll.propTypes = {\n//     children: PropTypes.element.isRequired,\n//     window: PropTypes.func,\n// };","map":{"version":3,"sources":["E:/Work/react/salvager/src/views/NavbarSection.js"],"names":["React","useState","useEffect","ReactDOM","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","BlackLogo","WhiteLogo","Grid","Container","Router","Route","Switch","Link","clsx","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","IconBurgerButton","IconBlackBurgerButton","CssBaseline","useScrollTrigger","Slide","Color","NavbarSection","props","navColor","setNavColor","scroll","setScroll","logoSize","setLogoSize","classes","useStyles","onScroll","e","target","documentElement","scrollTop","window","addEventListener","console","log","isMobile","innerWidth","Logo","LogoMobile","IconBurger","theme","logo","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","list","fullList","linkMobile","bgTransparent","navbar","map","mobileBurgerButton","mobileLogo","menuButton","color","link","backgroundColor","width","height","marginLeft","marginTop","boxShadow","paddingBottom","marginRight","spacing","title","flexGrow","background","paddingTop","fontWeight","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport BlackLogo from '../assets/img/black-logo.png';\r\nimport WhiteLogo from '../assets/img/white-logo.png';\r\nimport { Grid, Container } from '@material-ui/core';\r\nimport { Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconBurgerButton from '../assets/img/burgerBtn.png'\r\nimport IconBlackBurgerButton from '../assets/img/burgerBtnBlack.png'\r\n\r\nimport PropTypes from 'prop-types';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nlet Color;\r\n\r\n{/* <NavbarSection theme='light' /> */ }\r\nexport default function NavbarSection(props) {\r\n    const [navColor, setNavColor] = useState('transparent')\r\n    const [scroll, setScroll] = useState()\r\n    const [logoSize, setLogoSize] = useState()\r\n    const classes = useStyles({ navColor, logoSize });\r\n\r\n    useEffect(() => {\r\n        const onScroll = e => {\r\n            setScroll(e.target.documentElement.scrollTop);\r\n            if (scroll >= 300) {\r\n                if (navColor !== \"white\") {\r\n                    setNavColor(\"#DCE2E2\");\r\n                }\r\n            } else {\r\n                if (navColor !== \"transparent\") {\r\n                    setNavColor(\"transparent\");\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        console.log(\"Scroll top \" + scroll)\r\n    }, [scroll]);\r\n\r\n    let isMobile = false;\r\n    if (window.innerWidth >= 425) {\r\n        isMobile = false;\r\n        console.log('ini desktop')\r\n    } else {\r\n        isMobile = true;\r\n        console.log('ini mobile')\r\n    }\r\n    console.log(window.innerWidth)\r\n\r\n    let Logo;\r\n    let LogoMobile;\r\n    let IconBurger;\r\n    let theme = props.theme\r\n    theme = 'dark'\r\n    switch (theme) {\r\n        case 'dark':\r\n            Logo = BlackLogo;\r\n            IconBurger = IconBlackBurgerButton;\r\n            Color = 'black';\r\n            break;\r\n        case 'light':\r\n            Logo = WhiteLogo;\r\n            IconBurger = IconBurgerButton;\r\n            Color = 'white';\r\n            break;\r\n    }\r\n    if (props.logo === 'off') {\r\n        Logo = '';\r\n    }\r\n\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = anchor => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <ListItem>\r\n                    <Button><Link to='/' className={classes.linkMobile} color=\"inherit\">HOME</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/story' className={classes.linkMobile} color=\"inherit\">STORY</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/products' className={classes.linkMobile} color=\"inherit\">PRODUCTS</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/diary' className={classes.linkMobile} color=\"inherit\">DIARY</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/contact' className={classes.linkMobile} color=\"inherit\">CONTACT</Link></Button>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <div>\r\n                {/* <HideOnScroll {...props}> */}\r\n                <AppBar elevation={0} className={classes.bgTransparent}>\r\n                    <div position=\"static\" className={classes.navbar}>\r\n\r\n                        {['left'].map(anchor => (\r\n                            <React.Fragment key={anchor}>\r\n                                <Button className={classes.mobileBurgerButton} onClick={toggleDrawer(anchor, true)}>\r\n                                    {/* {anchor} */}\r\n                                    <img src={IconBurger} />\r\n                                </Button>\r\n                                <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                                    {list(anchor)}\r\n                                </Drawer>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        <img className={classes.mobileLogo} src={Logo} disply='inline' />\r\n                    </div>\r\n                </AppBar>\r\n                {/* </HideOnScroll> */}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/* <HideOnScroll {...props}> */}\r\n                <AppBar elevation={0} className={classes.bgTransparent}>\r\n                    <div position=\"static\" className={classes.navbar}>\r\n                        <Container>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                                        <img className={classes.logo} src={Logo} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Toolbar>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/' color=\"inherit\">HOME</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/story' color=\"inherit\">STORY</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/products' color=\"inherit\">PRODUCTS</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/diary' color=\"inherit\">DIARY</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/contact' color=\"inherit\">CONTACT</Link></Button>\r\n                                    </Toolbar>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    </div>\r\n                </AppBar>\r\n                {/* </HideOnScroll> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bgTransparent: {\r\n        backgroundColor: 'transparent'\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    mobileLogo: {\r\n        height: '3em',\r\n        // width: '50%',\r\n        marginLeft: '1em',\r\n        marginTop: '1em',\r\n    },\r\n    mobileBurgerButton: {\r\n        // marginLeft: '1em',\r\n        marginTop: '1em',\r\n    },\r\n\r\n    navbar: props => ({\r\n        color: 'black',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px edeeec',\r\n        // boxShadow: 'none'\r\n        backgroundColor: props.navColor,\r\n        paddingBottom: '1em',\r\n    }),\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        width: '70%',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    background: {\r\n        backgroundColor: 'transparent',\r\n    },\r\n    logo: {\r\n        paddingTop: '0.01rem',\r\n        width: '60%'\r\n    },\r\n    link: {\r\n        // color: Color,\r\n        fontWeight: 'bold',\r\n        margin: '1rem'\r\n    },\r\n    linkMobile: {\r\n        color: 'black',\r\n    }\r\n}));\r\n\r\n// function HideOnScroll(props) {\r\n//     const { children, window } = props;\r\n//     const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n//     return (\r\n//         <Slide appear={false} direction=\"down\" in={!trigger}>\r\n//             {children}\r\n//         </Slide>\r\n//     );\r\n// }\r\n\r\n// HideOnScroll.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     window: PropTypes.func,\r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}