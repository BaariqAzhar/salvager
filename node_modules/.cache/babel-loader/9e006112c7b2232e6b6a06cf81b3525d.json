{"ast":null,"code":"import * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      fixHeader = _ref.fixHeader,\n      fixColumn = _ref.fixColumn,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      componentWidth = _ref.componentWidth,\n      colSpan = _ref.colSpan;\n\n  var _React$useContext = React.useContext(TableContext),\n      scrollbarSize = _React$useContext.scrollbarSize; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (fixColumn) {\n      contentNode = React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, contentNode);\n    }\n\n    return React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, fixHeader, fixColumn, className, expanded, componentWidth, colSpan, scrollbarSize]);\n}\n\nexport default ExpandedRow;","map":{"version":3,"sources":["E:/Work/react/salvager/node_modules/rc-table/es/Body/ExpandedRow.js"],"names":["React","Cell","TableContext","ExpandedRow","_ref","prefixCls","children","Component","component","cellComponent","fixHeader","fixColumn","className","expanded","componentWidth","colSpan","_React$useContext","useContext","scrollbarSize","useMemo","contentNode","createElement","style","width","position","left","overflow","concat","display"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACI,SAFrB;AAAA,MAGIC,aAAa,GAAGL,IAAI,CAACK,aAHzB;AAAA,MAIIC,SAAS,GAAGN,IAAI,CAACM,SAJrB;AAAA,MAKIC,SAAS,GAAGP,IAAI,CAACO,SALrB;AAAA,MAMIC,SAAS,GAAGR,IAAI,CAACQ,SANrB;AAAA,MAOIC,QAAQ,GAAGT,IAAI,CAACS,QAPpB;AAAA,MAQIC,cAAc,GAAGV,IAAI,CAACU,cAR1B;AAAA,MASIC,OAAO,GAAGX,IAAI,CAACW,OATnB;;AAWA,MAAIC,iBAAiB,GAAGhB,KAAK,CAACiB,UAAN,CAAiBf,YAAjB,CAAxB;AAAA,MACIgB,aAAa,GAAGF,iBAAiB,CAACE,aADtC,CAZyB,CAa4B;;;AAGrD,SAAOlB,KAAK,CAACmB,OAAN,CAAc,YAAY;AAC/B,QAAIC,WAAW,GAAGd,QAAlB;;AAEA,QAAIK,SAAJ,EAAe;AACbS,MAAAA,WAAW,GAAGpB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AACvCC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAET,cAAc,IAAIJ,SAAS,GAAGQ,aAAH,GAAmB,CAAhC,CADhB;AAELM,UAAAA,QAAQ,EAAE,QAFL;AAGLC,UAAAA,IAAI,EAAE,CAHD;AAILC,UAAAA,QAAQ,EAAE;AAJL,SADgC;AAOvCd,QAAAA,SAAS,EAAE,GAAGe,MAAH,CAAUtB,SAAV,EAAqB,qBAArB;AAP4B,OAA3B,EAQXe,WARW,CAAd;AASD;;AAED,WAAOpB,KAAK,CAACqB,aAAN,CAAoBd,SAApB,EAA+B;AACpCK,MAAAA,SAAS,EAAEA,SADyB;AAEpCU,MAAAA,KAAK,EAAE;AACLM,QAAAA,OAAO,EAAEf,QAAQ,GAAG,IAAH,GAAU;AADtB;AAF6B,KAA/B,EAKJb,KAAK,CAACqB,aAAN,CAAoBpB,IAApB,EAA0B;AAC3BO,MAAAA,SAAS,EAAEC,aADgB;AAE3BJ,MAAAA,SAAS,EAAEA,SAFgB;AAG3BU,MAAAA,OAAO,EAAEA;AAHkB,KAA1B,EAIAK,WAJA,CALI,CAAP;AAUD,GAzBM,EAyBJ,CAACd,QAAD,EAAWC,SAAX,EAAsBG,SAAtB,EAAiCC,SAAjC,EAA4CC,SAA5C,EAAuDC,QAAvD,EAAiEC,cAAjE,EAAiFC,OAAjF,EAA0FG,aAA1F,CAzBI,CAAP;AA0BD;;AAED,eAAef,WAAf","sourcesContent":["import * as React from 'react';\r\nimport Cell from '../Cell';\r\nimport TableContext from '../context/TableContext';\r\n\r\nfunction ExpandedRow(_ref) {\r\n  var prefixCls = _ref.prefixCls,\r\n      children = _ref.children,\r\n      Component = _ref.component,\r\n      cellComponent = _ref.cellComponent,\r\n      fixHeader = _ref.fixHeader,\r\n      fixColumn = _ref.fixColumn,\r\n      className = _ref.className,\r\n      expanded = _ref.expanded,\r\n      componentWidth = _ref.componentWidth,\r\n      colSpan = _ref.colSpan;\r\n\r\n  var _React$useContext = React.useContext(TableContext),\r\n      scrollbarSize = _React$useContext.scrollbarSize; // Cache render node\r\n\r\n\r\n  return React.useMemo(function () {\r\n    var contentNode = children;\r\n\r\n    if (fixColumn) {\r\n      contentNode = React.createElement(\"div\", {\r\n        style: {\r\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\r\n          position: 'sticky',\r\n          left: 0,\r\n          overflow: 'hidden'\r\n        },\r\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\r\n      }, contentNode);\r\n    }\r\n\r\n    return React.createElement(Component, {\r\n      className: className,\r\n      style: {\r\n        display: expanded ? null : 'none'\r\n      }\r\n    }, React.createElement(Cell, {\r\n      component: cellComponent,\r\n      prefixCls: prefixCls,\r\n      colSpan: colSpan\r\n    }, contentNode));\r\n  }, [children, Component, fixHeader, fixColumn, className, expanded, componentWidth, colSpan, scrollbarSize]);\r\n}\r\n\r\nexport default ExpandedRow;"]},"metadata":{},"sourceType":"module"}