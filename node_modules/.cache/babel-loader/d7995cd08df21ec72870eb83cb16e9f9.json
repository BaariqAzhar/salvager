{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\react\\\\salvager\\\\src\\\\views\\\\NavbarSection.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'; // import logo from './logo.svg';\n// import './App.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton'; // import MenuIcon from '@material-ui/icons/Menu';\n\nimport BlackLogo from '../assets/img/black-logo.png';\nimport WhiteLogo from '../assets/img/white-logo.png';\nimport { Grid, Container } from '@material-ui/core';\nimport { Router, Route, Switch, Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconBurgerButton from '../assets/img/burgerBtn.png';\nimport IconBlackBurgerButton from '../assets/img/burgerBtnBlack.png';\nimport PropTypes from 'prop-types'; // import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nlet Color;\n{\n  /* <NavbarSection theme='light' /> */\n}\nexport default function NavbarSection(props) {\n  const [navColor, setNavColor] = useState('transparent');\n  const [scroll, setScroll] = useState();\n  const [logoSize, setLogoSize] = useState();\n  const classes = useStyles({\n    navColor,\n    logoSize\n  });\n  useEffect(() => {\n    const onScroll = e => {\n      setScroll(e.target.documentElement.scrollTop);\n\n      if (scroll >= 300) {\n        if (navColor !== \"white\") {\n          setNavColor(\"#DCE2E2\");\n        }\n      } else {\n        if (navColor !== \"transparent\") {\n          setNavColor(\"transparent\");\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScroll);\n    console.log(\"Scroll top \" + scroll);\n  }, [scroll]);\n  let isMobile = false;\n\n  if (window.innerWidth >= 425) {\n    isMobile = false;\n    console.log('ini desktop');\n  } else {\n    isMobile = true;\n    console.log('ini mobile');\n  }\n\n  console.log(window.innerWidth);\n  let Logo;\n  let LogoMobile;\n  let IconBurger;\n  let theme = props.theme;\n  theme = 'dark';\n\n  switch (theme) {\n    case 'dark':\n      Logo = BlackLogo;\n      IconBurger = IconBlackBurgerButton;\n      Color = 'black';\n      break;\n\n    case 'light':\n      Logo = WhiteLogo;\n      IconBurger = IconBurgerButton;\n      Color = 'white';\n      break;\n  }\n\n  if (props.logo === 'off') {\n    Logo = '';\n  }\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: classes.linkMobile,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"HOME\"))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/story\",\n    className: classes.linkMobile,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"STORY\"))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/products\",\n    className: classes.linkMobile,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"PRODUCTS\"))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/diary\",\n    className: classes.linkMobile,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"DIARY\"))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/contact\",\n    className: classes.linkMobile,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"CONTACT\")))));\n\n  if (isMobile) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      elevation: 0,\n      className: classes.bgTransparent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      position: \"static\",\n      className: classes.navbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, ['left'].map(anchor => React.createElement(React.Fragment, {\n      key: anchor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.mobileBurgerButton,\n      onClick: toggleDrawer(anchor, true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: IconBurger,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(Drawer, {\n      anchor: anchor,\n      open: state[anchor],\n      onClose: toggleDrawer(anchor, false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, list(anchor)))), React.createElement(\"img\", {\n      className: classes.mobileLogo,\n      src: Logo,\n      disply: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      elevation: 0,\n      className: classes.bgTransparent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      position: \"static\",\n      className: classes.navbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      className: classes.menuButton,\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classes.logo,\n      src: Logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        color: Color\n      },\n      className: classes.link,\n      to: \"/\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"HOME\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        color: Color\n      },\n      className: classes.link,\n      to: \"/story\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"STORY\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        color: Color\n      },\n      className: classes.link,\n      to: \"/products\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"PRODUCTS\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        color: Color\n      },\n      className: classes.link,\n      to: \"/diary\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"DIARY\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        color: Color\n      },\n      className: classes.link,\n      to: \"/contact\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"CONTACT\")))))))));\n  }\n}\nconst useStyles = makeStyles(theme => ({\n  bgTransparent: {\n    backgroundColor: 'transparent'\n  },\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  },\n  mobileLogo: {\n    height: '3em',\n    // width: '50%',\n    marginLeft: '1em',\n    marginTop: '1em'\n  },\n  mobileBurgerButton: {\n    // marginLeft: '1em',\n    marginTop: '1em'\n  },\n  navbar: props => ({\n    color: 'black',\n    // height: 48,\n    // padding: '0 30px',\n    boxShadow: '0 3px 5px 2px edeeec',\n    // boxShadow: 'none'\n    backgroundColor: props.navColor\n  }),\n  menuButton: {\n    marginRight: theme.spacing(2),\n    width: '70%'\n  },\n  title: {\n    flexGrow: 1\n  },\n  background: {\n    backgroundColor: 'transparent'\n  },\n  logo: {\n    paddingTop: '0.01rem',\n    width: '60%'\n  },\n  link: {\n    // color: Color,\n    fontWeight: 'bold',\n    margin: '1rem'\n  },\n  linkMobile: {\n    color: 'black'\n  }\n})); // function HideOnScroll(props) {\n//     const { children, window } = props;\n//     const trigger = useScrollTrigger({ target: window ? window() : undefined });\n//     return (\n//         <Slide appear={false} direction=\"down\" in={!trigger}>\n//             {children}\n//         </Slide>\n//     );\n// }\n// HideOnScroll.propTypes = {\n//     children: PropTypes.element.isRequired,\n//     window: PropTypes.func,\n// };","map":{"version":3,"sources":["E:/Work/react/salvager/src/views/NavbarSection.js"],"names":["React","useState","useEffect","ReactDOM","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","BlackLogo","WhiteLogo","Grid","Container","Router","Route","Switch","Link","clsx","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","IconBurgerButton","IconBlackBurgerButton","PropTypes","CssBaseline","useScrollTrigger","Slide","Color","NavbarSection","props","navColor","setNavColor","scroll","setScroll","logoSize","setLogoSize","classes","useStyles","onScroll","e","target","documentElement","scrollTop","window","addEventListener","console","log","isMobile","innerWidth","Logo","LogoMobile","IconBurger","theme","logo","state","setState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","list","fullList","linkMobile","bgTransparent","navbar","map","mobileBurgerButton","mobileLogo","menuButton","color","link","backgroundColor","width","height","marginLeft","marginTop","boxShadow","marginRight","spacing","title","flexGrow","background","paddingTop","fontWeight","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport BlackLogo from '../assets/img/black-logo.png';\r\nimport WhiteLogo from '../assets/img/white-logo.png';\r\nimport { Grid, Container } from '@material-ui/core';\r\nimport { Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconBurgerButton from '../assets/img/burgerBtn.png'\r\nimport IconBlackBurgerButton from '../assets/img/burgerBtnBlack.png'\r\n\r\nimport PropTypes from 'prop-types';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nlet Color;\r\n\r\n{/* <NavbarSection theme='light' /> */ }\r\nexport default function NavbarSection(props) {\r\n    const [navColor, setNavColor] = useState('transparent')\r\n    const [scroll, setScroll] = useState()\r\n    const [logoSize, setLogoSize] = useState()\r\n    const classes = useStyles({ navColor, logoSize });\r\n\r\n    useEffect(() => {\r\n        const onScroll = e => {\r\n            setScroll(e.target.documentElement.scrollTop);\r\n            if (scroll >= 300) {\r\n                if (navColor !== \"white\") {\r\n                    setNavColor(\"#DCE2E2\");\r\n                }\r\n            } else {\r\n                if (navColor !== \"transparent\") {\r\n                    setNavColor(\"transparent\");\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        console.log(\"Scroll top \" + scroll)\r\n    }, [scroll]);\r\n\r\n    let isMobile = false;\r\n    if (window.innerWidth >= 425) {\r\n        isMobile = false;\r\n        console.log('ini desktop')\r\n    } else {\r\n        isMobile = true;\r\n        console.log('ini mobile')\r\n    }\r\n    console.log(window.innerWidth)\r\n\r\n    let Logo;\r\n    let LogoMobile;\r\n    let IconBurger;\r\n    let theme = props.theme\r\n    theme = 'dark'\r\n    switch (theme) {\r\n        case 'dark':\r\n            Logo = BlackLogo;\r\n            IconBurger = IconBlackBurgerButton;\r\n            Color = 'black';\r\n            break;\r\n        case 'light':\r\n            Logo = WhiteLogo;\r\n            IconBurger = IconBurgerButton;\r\n            Color = 'white';\r\n            break;\r\n    }\r\n    if (props.logo === 'off') {\r\n        Logo = '';\r\n    }\r\n\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = anchor => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <ListItem>\r\n                    <Button><Link to='/' className={classes.linkMobile} color=\"inherit\">HOME</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/story' className={classes.linkMobile} color=\"inherit\">STORY</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/products' className={classes.linkMobile} color=\"inherit\">PRODUCTS</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/diary' className={classes.linkMobile} color=\"inherit\">DIARY</Link></Button>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Button><Link to='/contact' className={classes.linkMobile} color=\"inherit\">CONTACT</Link></Button>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <div>\r\n                {/* <HideOnScroll {...props}> */}\r\n                <AppBar elevation={0} className={classes.bgTransparent}>\r\n                    <div position=\"static\" className={classes.navbar}>\r\n\r\n                        {['left'].map(anchor => (\r\n                            <React.Fragment key={anchor}>\r\n                                <Button className={classes.mobileBurgerButton} onClick={toggleDrawer(anchor, true)}>\r\n                                    {/* {anchor} */}\r\n                                    <img src={IconBurger} />\r\n                                </Button>\r\n                                <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                                    {list(anchor)}\r\n                                </Drawer>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        <img className={classes.mobileLogo} src={Logo} disply='inline' />\r\n                    </div>\r\n                </AppBar>\r\n                {/* </HideOnScroll> */}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/* <HideOnScroll {...props}> */}\r\n                <AppBar elevation={0} className={classes.bgTransparent}>\r\n                    <div position=\"static\" className={classes.navbar}>\r\n                        <Container>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                                        <img className={classes.logo} src={Logo} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Toolbar>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/' color=\"inherit\">HOME</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/story' color=\"inherit\">STORY</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/products' color=\"inherit\">PRODUCTS</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/diary' color=\"inherit\">DIARY</Link></Button>\r\n                                        <Button><Link style={{ color: Color }} className={classes.link} to='/contact' color=\"inherit\">CONTACT</Link></Button>\r\n                                    </Toolbar>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    </div>\r\n                </AppBar>\r\n                {/* </HideOnScroll> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bgTransparent: {\r\n        backgroundColor: 'transparent'\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    mobileLogo: {\r\n        height: '3em',\r\n        // width: '50%',\r\n        marginLeft: '1em',\r\n        marginTop: '1em',\r\n    },\r\n    mobileBurgerButton: {\r\n        // marginLeft: '1em',\r\n        marginTop: '1em',\r\n    },\r\n\r\n    navbar: props => ({\r\n        color: 'black',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px edeeec',\r\n        // boxShadow: 'none'\r\n        backgroundColor: props.navColor,\r\n    }),\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        width: '70%',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    background: {\r\n        backgroundColor: 'transparent',\r\n    },\r\n    logo: {\r\n        paddingTop: '0.01rem',\r\n        width: '60%'\r\n    },\r\n    link: {\r\n        // color: Color,\r\n        fontWeight: 'bold',\r\n        margin: '1rem'\r\n    },\r\n    linkMobile: {\r\n        color: 'black',\r\n    }\r\n}));\r\n\r\n// function HideOnScroll(props) {\r\n//     const { children, window } = props;\r\n//     const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n//     return (\r\n//         <Slide appear={false} direction=\"down\" in={!trigger}>\r\n//             {children}\r\n//         </Slide>\r\n//     );\r\n// }\r\n\r\n// HideOnScroll.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     window: PropTypes.func,\r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}